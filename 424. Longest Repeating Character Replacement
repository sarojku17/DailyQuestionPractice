//Author : Saroj Mallick
//Linkedin : https://www.linkedin.com/in/saroj-mallick-00800412b/
//mailto: sarojku.17@gmail.com

//Given a string 's' that consists of only uppercase English letters, you can perform at most k operations on that string.
//In one operation, you can choose any character of the string and change it to any other uppercase English character.
//Find the length of the longest sub-string containing all repeating letters you can get after performing the above operations.
//Note: Both the string's length and k will not exceed 10^4.

//Solution: The idea is similar to https://github.com/sarojku17/LeetCodeSolutions/blob/main/Max%20Consecutive%20Ones%20III solution.
//Iterate over character set .At each interation consider the currect character 'c' as the potential repeating character and other 
//charcters that can be replaced by 'c'.Now we can assume the all the characters same as 'c' as 1 and other characters as 0.
//Now the question is same as Max Consecutive Ones III which I have saved earlier .

class Solution {
public:
    int characterReplacement(string s, int k) {
        int n=s.length();
        int ans=0;
        for(char c='A';c<='Z';c++)
        {
            int cnt=0;int j=0;
            for(int i=0;i<n;i++)
            {
                if(s[i]!=c)
                    cnt++;
                while(j<=i&&cnt>k)
                {
                    if(s[j]!=c)
                        cnt--;
                    j++;
                    
                }
            ans=max(ans,i-j+1);                
            }

        }
        return ans;
    }
};
