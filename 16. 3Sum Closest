// Author : Saroj Mallick
// Linkedin : https://www.linkedin.com/in/saroj-mallick-00800412b/
// mailto: sarojku.17@gmail.com


// Link: https://leetcode.com/problems/3sum-closest/
// 16. 3Sum Closest

// Problem Description
// Given an array nums of n integers and an integer target, find three integers in nums such that the sum
// is closest to target. Return the sum of the three integers. You may assume that each input would have 
// exactly one solution.

//Idea : here we will be creating current sum as closer to the target by shrinking j and k 
//Such that current sum is as close as target.

class Solution {
public:
    int threeSumClosest(vector<int>& a, int t) {
        int n=a.size();
        int diff=INT_MAX,ans;
        sort(a.begin(),a.end());
        for(int i=0;i<n;i++)
        {
            int j=i+1,k=n-1;
            while(j<k)
            {
                int s=a[i]+a[j]+a[k];
                int cur=abs(s-t);
                if(diff>cur)
                {
                    diff=cur;
                    ans=s;
                } 
                if(s==t)
                    return s;
                else if(s<t)
                    j++;
                else 
                    k--;
                    
            }
        }
        return ans;
    }
};
